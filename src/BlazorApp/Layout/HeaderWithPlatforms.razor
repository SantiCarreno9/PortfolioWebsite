@inject IJSRuntime JSRuntime

<div id="header">
    <HeaderButton Id=(int)TabCategories.Menu Text="Menu" OnClicked=OnButtonSelected State=@(currentCategory==TabCategories.Menu)
                  DropdownItems='new List<HeaderDropdownItem>{
                new HeaderDropdownItem{ Text="Home", OnClickedAction=()=>{ScrollAction("#home");} },
                new HeaderDropdownItem{ Text="About", OnClickedAction=()=>{ScrollAction("#about");} }}'>
        <div class="three-bar-button logo">
            <div class="bar" />
            <div class="bar" />
            <div class="bar" />
        </div>
    </HeaderButton>
    <HeaderButton Id=(int)TabCategories.Unity Text="Unity" OnClicked=OnButtonSelected State=@(currentCategory==TabCategories.Unity)>
        <img class="logo" src="/images/icons/unity-logo-simple.png" alt="Unity" />
    </HeaderButton>
    <HeaderButton Id=(int)TabCategories.Unreal Text="Unreal" OnClicked=OnButtonSelected State=@(currentCategory==TabCategories.Unreal)>
        <img class="logo" src="/images/icons/unreal-logo-simple.png" alt="Unreal" />
    </HeaderButton>
    <HeaderButton Id=(int)TabCategories.Dotnet Text=".NET" OnClicked=OnButtonSelected State=@(currentCategory==TabCategories.Dotnet)>
        <img class="logo" src="/images/icons/dotnet-2.png" alt=".NET" />
    </HeaderButton>
</div>

<script>
    function scrollToSection(sectionId) {
        const section = document.querySelector(sectionId);
        if (section) {
            section.scrollIntoView({ behavior: 'smooth' });
        }
    }
</script>

@code {

    private string currentMenuText = "Home";

    private Action<string> ScrollAction;

    private TabCategories currentCategory = TabCategories.Menu;

    protected override void OnInitialized()
    {
        ScrollAction = (sectionId) => { ScrollToId(sectionId); };
    }

    private async void ScrollToId(string sectionId)
    {
        await ScrollTo(sectionId);
    }

    private async Task ScrollTo(string sectionId)
    {
        await JSRuntime.InvokeVoidAsync("scrollToSection", sectionId);
    }

    private void OnButtonSelected(int id)
    {
        currentCategory = (TabCategories)id;
        switch (currentCategory)
        {
            case TabCategories.Unity:
            case TabCategories.Unreal:
            case TabCategories.Dotnet:
                ScrollAction("#portfolio");
                break;
        }
        StateHasChanged();
    }
}