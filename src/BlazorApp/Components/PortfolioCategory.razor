<section class="dark" id="portfolio">
    <div class=@containerStyle>
        <div class="row tabs-container">
            <button class="col tab-button unity @(currentCategory==Category.Unity? " active":"")" @onclick="()=>ChangePlatform(Category.Unity)">
                <img class="logo" src="/images/icons/unity-logo.png" alt="Unity" />
            </button>
            <button class="col tab-button unreal @(currentCategory==Category.Unreal? " active":"")" @onclick="()=>ChangePlatform(Category.Unreal)">
                <img class="logo" src="/images/icons/unreal.png" alt="Unreal" />
            </button>
            <button class="col tab-button dotnet @(currentCategory==Category.Dotnet? " active":"")" @onclick="()=>ChangePlatform(Category.Dotnet)">
                <img class="logo" src="/images/icons/dotnet.png" alt=".NET" />
            </button>
        </div>
        <div style="flex:1">
        @switch (currentCategory)
        {
            case Category.Unity:
                @if (projectCardsUnity != null)
                {
                    <Carousel Components="@projectCardsUnity"></Carousel>
                }
                break;
            case Category.Unreal:
                @if (projectCardsUnreal != null)
                {
                    <Carousel Components="@projectCardsUnreal"></Carousel>
                }
                break;
            case Category.Dotnet:
                @if (projectCardsDotNet != null)
                {
                    <Carousel Components="@projectCardsDotNet"></Carousel>
                }
                break;
        }
        </div>
        @*  <button></button>
        <button></button>
        <button></button> *@
        @* @if (projects is null)
        {
        <p><em>Loading...</em></p>
        }
        else
        {
        <div class="customContainer">
        <button class:"tab-button">
        @* <img></img> *@
        @* </button> *@

        @* </div> *@
        @* <div class="portfolio-hero">
        @if (hero is not null)
        {
        <img src="@(hero.Src)" style="height: 90%; width: 100%; object-fit: cover;"
        alt="@(hero.Alt)" />
        }
        </div>
        <div class="container">
        @foreach (var project in projects)
        {
        <div class="box" key="@project.Title">
        <a href="@project.Url" target="_blank" rel="noopener noreferrer">
        <h3 style="flex-basis: 40px;">@project.Title</h3>
        </a>
        <p class="small">@project.Description</p>
        </div>
        }
        </div> *@
    </div>
</section>

@code {
    private RenderFragment<Project> projectCardTemplate = (project) =>@<ProjectCard Project="@project" />;

    private void GenerateCards(Project[] projects, out RenderFragment[] projectCard)
    {
        projectCard = new RenderFragment[projects.Length];
        for (int i = 0; i < projects.Length; i++)
        {
            projectCard[i] = @projectCardTemplate(projects[i]);
        }
    }
}